# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All" 
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session
Job Id                 0
Experience             0
Qualifications         0
Salary Range           0
location               0
Country                0
latitude               0
longitude              0
Work Type              0
Company Size           0
Job Posting Date       0
Preference             0
Contact Person         0
Contact                0
Job Title              0
Role                   0
Job Portal             0
Job Description        0
Benefits               0
skills                 0
Responsibilities       0
Company                0
Company Profile     5478
dtype: int64
Job Id              0
Experience          0
Qualifications      0
Salary Range        0
location            0
Country             0
latitude            0
longitude           0
Work Type           0
Company Size        0
Job Posting Date    0
Preference          0
Contact Person      0
Contact             0
Job Title           0
Role                0
Job Portal          0
Job Description     0
Benefits            0
skills              0
Responsibilities    0
Company             0
Company Profile     0
dtype: int64
Job Id	latitude	longitude	Company Size
count	1.610462e+06	1.610462e+06	1.610462e+06	1.610462e+06
mean	1.548978e+15	1.937873e+01	1.640275e+01	7.370378e+04
std	8.946738e+14	2.355602e+01	7.066469e+01	3.529832e+04
min	1.817948e+11	-4.090060e+01	-1.751982e+02	1.264600e+04
25%	7.740660e+14	5.152100e+00	-1.518040e+01	4.311400e+04
50%	1.547972e+15	1.807080e+01	1.914510e+01	7.363350e+04
75%	2.323738e+15	3.907420e+01	4.757690e+01	1.042990e+05
max	3.099618e+15	7.170690e+01	1.780650e+02	1.348340e+05
(1610462, 23)
37040626
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1615940 entries, 0 to 1615939
Data columns (total 23 columns):
 #   Column            Non-Null Count    Dtype  
---  ------            --------------    -----  
 0   Job Id            1615940 non-null  int64  
 1   Experience        1615940 non-null  object 
 2   Qualifications    1615940 non-null  object 
 3   Salary Range      1615940 non-null  object 
 4   location          1615940 non-null  object 
 5   Country           1615940 non-null  object 
 6   latitude          1615940 non-null  float64
 7   longitude         1615940 non-null  float64
 8   Work Type         1615940 non-null  object 
 9   Company Size      1615940 non-null  int64  
 10  Job Posting Date  1615940 non-null  object 
 11  Preference        1615940 non-null  object 
 12  Contact Person    1615940 non-null  object 
 13  Contact           1615940 non-null  object 
 14  Job Title         1615940 non-null  object 
 15  Role              1615940 non-null  object 
 16  Job Portal        1615940 non-null  object 
 17  Job Description   1615940 non-null  object 
 18  Benefits          1615940 non-null  object 
 19  skills            1615940 non-null  object 
...
 21  Company           1615940 non-null  object 
 22  Company Profile   1610462 non-null  object 
dtypes: float64(2), int64(2), object(19)
memory usage: 283.6+ MB
Output is truncated. View as a scrollable element or open in a text editor. Adjust cell output settings...
/kaggle/input/job-description-dataset/job_descriptions.csv
df=pd.read_csv("/kaggle/input/job-description-dataset/job_descriptions.csv")
df.head()
df.tail()
df.head()
df.isnull().sum()
df = df.dropna(subset=['Company Profile'])
df.isnull().sum()
df.describe()
df.shape
df.size
df.value_counts
df.columns
import matplotlib.pyplot as plt
import seaborn as sns
# Plot the distribution of job postings by country
plt.figure(figsize=(12, 6))
sns.countplot(y='Country', data=df, order=df['Country'].value_counts().index)
plt.title('Distribution of Job Postings by Country')
plt.xlabel('Number of Job Postings')
plt.ylabel('Country')
plt.show()
# Plot the top 10 most common job titles
plt.figure(figsize=(12, 6))
df['Job Title'].value_counts().head(10).plot(kind='barh', color='skyblue')
plt.title('Top 10 Most Common Job Titles')
plt.xlabel('Number of Postings')
plt.ylabel('Job Title')
plt.show()
df.plot.scatter(x='Experience', y='Salary Range', title='Experience vs Salary Range')
<Axes: title={'center': 'Experience vs Salary Range'}, xlabel='Experience', ylabel='Salary Range
work_type_distribution = df['Work Type'].value_counts()
work_type_distribution.plot(kind='pie', autopct='%1.1f%%', title='Job Postings by Work Type')
<Axes: title={'center': 'Job Postings by Work Type'}, ylabel='count'>
job_role_portal = pd.crosstab(df['Job Portal'], df['Role'])
job_role_portal.plot(kind='bar', stacked=True, title='Job Roles by Job Portal')
<Axes: title={'center': 'Job Roles by Job Portal'}, xlabel='Job Portal'>
# Display a message encouraging upvotes
from IPython.display import Markdown

upvote_message = """
### If you found this notebook helpful, please consider giving it an upvote! üëç
"""
display(Markdown(upvote_message))
